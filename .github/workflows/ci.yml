name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: 
          - ubuntu-latest
          # - windows-latest FIXME: Type not found : travix.PostDownload
          - macos-latest
        haxe-version:
          # - 3.4.7
          - 4.0.5
          - 4.1.5
          - stable
          - nightly
        tink_core:
          - v1
          - master
        target: 
          - interp
          - node
          # - neko
          # - python
          # - php
          # - cpp
          # - js
          # - java -D jvm
        exclude:
          # jvm only works on haxe 4
          - haxe-version: 3.4.7
            target: java -D jvm

    steps:
    - uses: actions/checkout@v2
      
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: Cache Haxe
      uses: actions/cache@v1
      with:
        path: ~/haxe
        key: ${{ runner.os }}-haxe-${{ hashFiles('haxe_libraries/**') }}
      
    - uses: lix-pm/setup-lix@master
    - run: lix install haxe ${{ matrix.haxe-version }}
    - run: lix download
    - run: lix +tink 'core#${{ matrix.tink_core }}'
    - run: lix run travix ${{ matrix.target }}
